# Apache graphs
Apache_Bytes:
    glob_verify: apache/apache_bytes.wsp
    hideLegend: true
    target:
    - 'substr(collectd.%(host)s.apache.apache_bytes,3)'

Apache_Connections_and_Requests:
    glob_verify: apache
    target:
    - 'substr(collectd.%(host)s.apache.apache_connections,3)'
    - 'substr(collectd.%(host)s.apache.apache_requests,3)'

Apache_Scoreboard:
    glob_verify: apache/scoreboard
    hideLegend: false
    areaMode: stacked
    target:
    - 'substr(sortByMaxima(maximumAbove(collectd.%(host)s.apache.scoreboard.[a-np-z]*,0.1)),4)'
    - 'substr(color(collectd.%(host)s.apache.scoreboard.open,"%(color_free)s"),4)'


# Apache Access All graphs (Tail graphs)
Apache_Access_All_First_Byte:
    glob_verify: tail/access_log_all/first_byte
    vtitle: ms
    target:
    - 'substr(scale(collectd.%(host)s.tail.access_log_all.first_byte.{avg,min},0.001),5)'
    - 'substr(secondYAxis(scale(collectd.%(host)s.tail.access_log_all.first_byte.max,0.001)),5)'

Apache_Access_All_Response:
    glob_verify: tail/access_log_all/response
    vtitle: ms
    target:
    - 'substr(scale(collectd.%(host)s.tail.access_log_all.response.{avg,min},0.001),5)'
    - 'substr(secondYAxis(scale(collectd.%(host)s.tail.access_log_all.response.max,0.001)),5)'

Apache_Access_All_Status:
    glob_verify: tail/access_log_all/status
    target:
    - 'substr(sortByMaxima(maximumAbove(collectd.%(host)s.tail.access_log_all.status.*,0.1)),5)'


# Carbon graphs
Carbon_Cache_Avg_Update_Time:
    carbon_match: true
    hideLegend: true
    lineMode: connected
    target:
    - 'substr(carbon.agents.%(host)s-a.avgUpdateTime,3)'

Carbon_Cache_Errors:
    carbon_match: true
    hideLegend: true
    lineMode: connected
    target:
    - 'substr(lineWidth(carbon.agents.%(host)s-a.errors,2),3)'

Carbon_Cache_Points_per_update:
    carbon_match: true
    hideLegend: true
    lineMode: connected
    target:
    - 'substr(carbon.agents.%(host)s-a.pointsPerUpdate,3)'

Carbon_Cache_Queues:
    carbon_match: true
    hideLegend: true
    lineMode: connected
    target:
    - 'substr(carbon.agents.%(host)s-a.cache.queues,4)'

Carbon_Cache_Queries:
    carbon_match: true
    hideLegend: true
    lineMode: connected
    target:
    - 'substr(carbon.agents.%(host)s-a.cache.queries,4)'

Carbon_Metrics:
    carbon_match: true
    vtitle: points
    lineMode: connected
    target:
    - 'alias(carbon.aggregator.%(host)s-a.metricsReceived,"aggregator_received")'
    - 'alias(carbon.agents.%(host)s-a.metricsReceived,"cache_received")'
    - 'alias(carbon.agents.%(host)s-a.committedPoints,"cache_committed")'


# CPU graphs
CPU:
    glob_verify: cpu
    areaMode: stacked
    target:
    - 'sortByMaxima(maximumAbove(groupByNode(exclude(collectd.%(host)s.cpu.*.*,"idle"),4,"sumSeries"),0.1))'
    - 'substr(color(sumSeries(collectd.%(host)s.cpu.*.idle),"%(color_free)s"),4)'


# DF graphs
DF:
    title: DF_%(metric)s
    glob_metrics: df/*
    glob_verify: .
    yMin: 0
    target:
    - 'substr(stacked(collectd.%(host)s.df.%(metric)s.{used,reserved}),4)'
    - 'substr(color(stacked(collectd.%(host)s.df.%(metric)s.free),"%(color_free)s"),4)'
    - 'alias(color(scale(sumSeries(collectd.%(host)s.df.%(metric)s.*),0.8),"white"),"80pct")'


# Disk graphs
Disk_octets:
    title: Disk_%(metric)s_octets
    glob_metrics: disk/*
    glob_verify: octets
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.disk.%(metric)s.octets.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.disk.%(metric)s.octets.*,5)'

Disk_ops:
    title: Disk_%(metric)s_ops
    glob_metrics: disk/*
    glob_verify: ops
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.disk.%(metric)s.ops.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.disk.%(metric)s.ops.*,5)'

Disk_time:
    title: Disk_%(metric)s_time
    glob_metrics: disk/*
    glob_verify: time
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.disk.%(metric)s.time.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.disk.%(metric)s.time.*,5)'


# Entropy graphs
Entropy:
    glob_verify: entropy.wsp
    hideLegend: true
    yMin: 0
    target:
    - 'substr(collectd.%(host)s.entropy,2)'


# Interface graphs
Interface_errors:
    title: Interface_%(metric)s_errors
    glob_metrics: interface/*
    glob_verify: errors
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.interface.%(metric)s.errors.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.interface.%(metric)s.errors.*,5)'

Interface_octets:
    title: Interface_%(metric)s_octets
    glob_metrics: interface/*
    glob_verify: octets
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.interface.%(metric)s.octets.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.interface.%(metric)s.octets.*,5)'

Interface_packets:
    title: Interface_%(metric)s_packets
    glob_metrics: interface/*
    glob_verify: packets
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.interface.%(metric)s.packets.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.interface.%(metric)s.packets.*,5)'


# Load graphs
Load:
    glob_verify: load
    yMin: 0
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.load.*),3)'


# Memcached graphs
Memcached_Cache:
    glob_verify: memcached/cache
    yMin: 0
    target:
    - 'substr(stacked(collectd.%(host)s.memcached.cache.used),4)'
    - 'substr(color(stacked(collectd.%(host)s.memcached.cache.free),"%(color_free)s"),4)'

Memcached_Items:
    glob_verify: memcached/items.wsp
    yMin: 0
    target:
    - 'substr(collectd.%(host)s.memcached.items,3)'

Memcached_Commands_and_Ops:
    glob_verify: memcached/command
    hideLegend: false
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.memcached.{command,ops}.*),4)'

Memcached_Connections:
    glob_verify: memcached/connections.wsp
    hideLegend: true
    yMin: 0
    target:
    - 'substr(collectd.%(host)s.memcached.connections,3)'

Memcached_Hit_Ratio:
    glob_metrics: memcached
    glob_verify: hitratio.wsp
    hideLegend: true
    target:
    - 'substr(collectd.%(host)s.memcached.hitratio,3)'

Memcached_Octets:
    glob_verify: memcached/octets
    target:
    - 'alias(color(sumSeries(collectd.%(host)s.memcached.octets.*),"%(color_combined)s"),"combined")'
    - 'substr(collectd.%(host)s.memcached.octets.*,4)'

Memcached_Processes:
    glob_verify: memcached/ps_count
    yMin: 0
    target:
    - 'substr(collectd.%(host)s.memcached.ps_count.*,4)'

Memcached_CPU_Time:
    glob_verify: memcached/ps_cputime
    areaMode: stacked
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.memcached.ps_cputime.*),4)'


# Memory graphs
Memory:
    glob_verify: memory
    areaMode: stacked
    yMin: 0
    target:
    # explicit metric names to ensure order
    - 'substr(collectd.%(host)s.memory.{used,buffered,cached}*,3)'
    - 'substr(color(collectd.%(host)s.memory.free,"%(color_free)s"),3)'


# MySQL graphs
MySQL_Cache_Size:
    glob_verify: mysql/collectd_mon
    hideLegend: true
    target:
    - 'substr(collectd.%(host)s.mysql.collectd_mon.cache_size,4)'

MySQL_Cache_Result:
    glob_verify: mysql/collectd_mon/cache_result
    areaMode: stacked
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.mysql.collectd_mon.cache_result.*),5)'

MySQL_top_six_Commands:
    glob_verify: mysql/collectd_mon/mysql_commands
    areaMode: stacked
    hideLegend: false
    target:
    - 'substr(sortByMaxima(highestMax(collectd.%(host)s.mysql.collectd_mon.mysql_commands.*,6)),5)'

MySQL_Threads:
    glob_verify: mysql/collectd_mon/threads
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.mysql.collectd_mon.threads.*),5)'

MySQL_Locks:
    glob_verify: mysql/collectd_mon/mysql_locks
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.mysql.collectd_mon.mysql_locks.*),5)'

MySQL_Octets:
    glob_verify: mysql/collectd_mon/mysql_octets
    target:
    - 'substr(collectd.%(host)s.mysql.collectd_mon.mysql_octets.*,5)'


# NFS graphs
NFS_Client:
    glob_verify: nfs/client
    hideLegend: false
    target:
    - 'substr(sortByMaxima(highestAverage(collectd.%(host)s.nfs.client.*,6)),4)'

NFS_Server:
    glob_verify: nfs/server
    hideLegend: false
    target:
    - 'substr(sortByMaxima(highestAverage(collectd.%(host)s.nfs.server.*,6)),4)'


# NTPd graphs
NTP_Offset:
    glob_verify: ntpd/time_offset
    target:
    # Limit reported hosts to first 4 IPs
    - 'substr(limit(collectd.%(host)s.ntpd.time_offset.[0-9]*,4),4)'


# Postfix graphs (Exec and Tail graphs)
Postfix_Delays:
    glob_verify: tail/postfix/delay
    drawNullAsZero: true
    target:
    - 'substr(collectd.%(host)s.tail.postfix.delay.total,5)'
    - 'substr(sortByMaxima(maximumAbove(exclude(collectd.%(host)s.tail.postfix.delay.*,"total"),0.1)),5)'

Postfix_Inbound_Connections:
    glob_verify: tail/postfix/conn-in
    target:
    - 'substr(collectd.%(host)s.tail.postfix.conn-in.open,5)'
    - 'substr(sortByMaxima(maximumAbove(exclude(collectd.%(host)s.tail.postfix.conn-in.*,"open"),0.1)),5)'

Postfix_Message_Size:
    glob_verify: tail/postfix/message-size.wsp
    hideLegend: true
    target:
    - 'substr(collectd.%(host)s.tail.postfix.message-size,4)'

Postfix_Queue_Size:
    glob_verify: postfix/queue_length
    lineMode: connected
    yMin: 0
    target:
    - 'alias(sumSeries(collectd.%(host)s.postfix.queue_length.*),"total")'
    - 'substr(collectd.%(host)s.postfix.queue_length.*,4)'

Postfix_Outbound_Connections:
    glob_verify: tail/postfix/conn-out
    target:
    - 'substr(collectd.%(host)s.tail.postfix.conn-out.*,5)'

Postfix_Rejected:
    glob_verify: tail/postfix/rejected
    target:
    - 'substr(collectd.%(host)s.tail.postfix.rejected.total,5)'
    - 'substr(sortByMaxima(maximumAbove(exclude(collectd.%(host)s.tail.postfix.rejected.*,"total"),0.1)),5)'

Postfix_Status:
    glob_verify: tail/postfix/status
    target:
    - 'substr(sortByMaxima(collectd.%(host)s.tail.postfix.status.sent),5)'
    - 'substr(sortByMaxima(maximumAbove(exclude(collectd.%(host)s.tail.postfix.status.*,"sent"),0.1)),5)'


# Processes graphs
Process_State:
    glob_verify: processes/ps_state
    areaMode: stacked
    target:
    - 'substr(sortByMaxima(maximumAbove(exclude(collectd.%(host)s.processes.ps_state.*,"sleeping"),0.1)),4)'
    - 'substr(color(collectd.%(host)s.processes.ps_state.sleeping,"%(color_free)s"),4)'

Process_Fork_Rate:
    glob_verify: processes/fork_rate.wsp
    hideLegend: true
    target:
    - 'substr(collectd.%(host)s.processes.fork_rate,3)'


# Swap graphs
Swap:
    glob_verify: swap
    areaMode: stacked
    yMin: 0
    target:
    - 'substr(collectd.%(host)s.swap.{used,cached},3)'
    - 'substr(color(collectd.%(host)s.swap.free,"%(color_free)s"),3)'


# TCP Connectn graphs
TCP:
    title: TCP_%(metric)s
    glob_metrics: tcpconns/*
    glob_verify: .
    hideLegend: false
    yMin: 0
    target:
    - 'substr(sortByMaxima(maximumAbove(collectd.%(host)s.tcpconns.%(metric)s.*,0.1)),4)'


# Uptime
Uptime:
    glob_verify: uptime.wsp
    hideLegend: true
    vtitle: days
    target:
    - 'substr(lineWidth(scale(collectd.%(host)s.uptime,0.00001157),2),2)'


# Users graphs
Users:
    glob_verify: users.wsp
    hideLegend: true
    yMin: 0
    target:
    - 'substr(lineWidth(collectd.%(host)s.users,2),2)'
